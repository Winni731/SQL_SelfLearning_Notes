
Data model: a notation for describing data: structure, constraints, operations

some data models:
- network
- hierarchical
- relational 
- semi-structured

Most widely used: Relational Data Model --> Data Independence !
- Declarative access to data
- Relationships specified by queries
- Develop, maintain apps and data layout separately

Relational Model:
- Logical representation of data: two-dimensional tables
- Formal system for manipulation relations: Relational algebra
- Result High-level of data, Mechanical rules for rewriting/optimizing low-level access, reason about soundness

Attribute ( unique name ) with each domain that describes its role in the relation --> non-positional; column headings
Notation: t[A] / t.A denotes the value on attribute A for a tuple t

Generally, if X is a sequence of attributes A1, A2, ..., An, t[X] is <t[A1], t[A2], ..., t[An]>

Value-Based References: 
- Advantage: lead to independence from physical data structure, such as pointers

A null value is a special value which denotes the absence of a value
types of Null Values:
- unknown value
- non-existent value
- non-information value

An integrity constraint is a property that must be satisfied by all meaningful database instances
Constraints:
- Intra-relational constraints
        - domain constraints: a tuple constraint that involves a single attribute
        - tuple constraints: expresses conditions on the values of each tuple, independently of other tuples
        - keys: a set of attributes that uniquely identifies tuples in a relation
- Inter-relational constraints
        - foreign keys
        




